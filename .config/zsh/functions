#!/bin/sh

function cht() {
	defaultcolor=${2:-xcode}
	curl -s "cheat.sh/$1?style=$defaultcolor"
}

function zsh_directory_name() {
  emulate -L zsh
  [[ $1 == d ]] || return
  while [[ $2 != / ]]; do
	if [[ -e $2/.git ]]; then
	  typeset -ga reply=(${2:t} $#2)
	  return
	fi
	2=${2:h}
  done
  return 1
}

function rainbowband() {
	awk 'BEGIN{
	s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
	for (colnum = 0; colnum<77; colnum++) {
		r = 255-(colnum*255/76);
		g = (colnum*510/76);
		b = (colnum*255/76);
		if (g>255) g = 510-g;
		printf "\033[48;2;%d;%d;%dm", r,g,b;
		printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
		printf "%s\033[0m", substr(s,colnum+1,1);
	}
	printf "\n";
	}'
}

function mkcd() {
	/usr/bin/mkdir -p $1 && cd $1
}

function cpcd() {
	/usr/bin/mkdir -p $2 && cp $1 $2 && cd $2
}

function mvcd() {
	/usr/bin/mv $1 $2 && cd $2
}

function cdls() {
	builtin cd "$@" > /dev/null 2>&1 || /usr/bin/echo "no such directory '$@'"
	lscwd
}

function lscwd() {
	tot=$(/bin/ls -1 -f | wc -l)
	visible=$(/bin/ls -1 -U --color=never --classify=never | wc -l)
	if [[ $tot -eq 2 ]]; then
		/bin/echo "This directory is empty"
	elif [[ $visible -eq 0 ]]; then
		ls -A
	else
		ls
	fi
}

function pcs() {
	for i in {0..7}; do
		echo -en "\e[${1}$((30+$i))m \u2588\u2588 \e[0m";
	done;
}

function blox() {
	printf "\n%s\n%s\n\n" "$(pcs)" "$(pcs '1;')"
}

# ex - archive extractor
# usage: ex <file>
function ex ()
{
  if [ -f $1 ] ; then
	case $1 in
	  *.tar.bz2)   tar xjf $1	;;
	  *.tar.gz)    tar xzf $1	;;
	  *.tar.xz)    tar xf $1	;;
	  *.bz2)	   bunzip2 $1	;;
	  *.rar)	   unrar x $1	;;
	  *.gz)		   gunzip $1	;;
	  *.tar)	   tar xf $1	;;
	  *.tbz2)	   tar xjf $1	;;
	  *.tgz)	   tar xzf $1	;;
	  *.zip)	   unzip $1		;;
	  *.Z)		   uncompress $1;;
	  *.7z)		   7z x $1		;;
	  *)		   echo "'$1' cannot be extracted via ex()" ;;
	esac
  else
	/usr/bin/echo "'$1' is not a valid file"
  fi
}
