snippet box "boxed environment"
\\boxed{${1}}
endsnippet

snippet quot "Latex Quotations"
\`\`$1''
endsnippet

snippet br "bracket"
\\left[$1\\right] $0
endsnippet

snippet pa "parentheses"
\\left($1\\right) $0
endsnippet

snippet brc "braces"
\\left\\{$1\\right\\} $0
endsnippet

snippet pmat "pmatrix"
\\begin{pmatrix}
	$1
\\end{pmatrix} $0
endsnippet

snippet bmat "bmatrix"
\\begin{bmatrix}
	$1
\\end{bmatrix} $0
endsnippet

snippet bb "mathbb"
\\mathbb{$1}$0
endsnippet

snippet beg "begin/end" b
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet mk "Math" w
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ', ':']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" w
\[
$1
.\] $0
endsnippet

snippet = "andequals"
&=
endsnippet

snippet al "default align environment"
\begin{align*}
	$1
\end{align*}
endsnippet

snippet si "siunitx shortcut" w
\SI{${1:number}}{${2:units}}
endsnippet

snippet sec "section"
\section{$1}
endsnippet

snippet ga "gather"
\begin{gather*}
	$1
\end{gather*}
endsnippet

snippet wt "widetilde"
\widetilde{$1}
endsnippet

snippet pict "insert picture top align"
\adjustbox{valign=t}{\includegraphics[scale=$1]{$2}}
endsnippet

snippet inv "inverse"
{$1}^{-1}
endsnippet

snippet tp "transpose"
{$1}^{\top}
endsnippet

snippet exp "exponent"
\times 10^{$1}
endsnippet

snippet conc "concentration"
\ch{[$1]}
endsnippet

snippet ch "chemistry"
\ch{$1}
endsnippet

snippet lb "label"
\label{$1}
endsnippet

snippet int "integral"
\int_{$1}^{$2} $3 \: d{$4}
endsnippet

snippet setup "setup"
\documentclass[12pt]{article}

%{{{ Packages 
\usepackage[utf8]{inputenc}
\usepackage[margin=1truein,letterpaper]{geometry}
\usepackage[shortlabels]{enumitem}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{siunitx}
\usepackage{graphicx}
\usepackage{adjustbox}
\usepackage{xurl}
%}}}

% Matrix Overrides for bmatrix
\makeatletter
\renewcommand*\env@matrix[1][*\c@MaxMatrixCols c]{%
	\hskip -\arraycolsep
	\let\@ifnextchar\new@ifnextchar
	\array{#1}}
\makeatother

\title{${1:Title}}
\author{${2:Derick Tseng}}
\date{\today}

\begin{document}
	\maketitle
	$3
\end{document}
endsnippet

global !p
def create_matrix_placeholders(snip):
	# Create anonymous snippet body
	anon_snippet_body = ""

	# Get start and end line number of expanded snippet
	start = snip.snippet_start[0]
	end = snip.snippet_end[0]

  # Append current line into anonymous snippet
	for i in range(start, end + 1):
		anon_snippet_body += snip.buffer[i]
		anon_snippet_body += "" if i == end else "\n"

	# Delete expanded snippet line till second to last line
	for i in range(start, end):
		del snip.buffer[start]

	# Empty last expanded snippet line while preserving the line
	snip.buffer[start] = ''

	# Expand anonymous snippet
	snip.expand_anon(anon_snippet_body)

def create_matrix(cols, rows, sep, start, end):
	res = ""
	placeholder = 1
	for _ in range(0, int(rows)):
		res += start + f"${placeholder} "
		placeholder += 1
		for _ in range(0, int(cols) - 1):
			res += sep + f" ${placeholder} "
			placeholder += 1
		res += end
	return res[:-1]
endglobal

post_jump "create_matrix_placeholders(snip)"
snippet 'arr(\d+),(\d+)' "LaTeX array" br
\begin{array}{`!p
orient = ""
for _ in range(0, int(match.group(1))): orient += "l"
snip.rv = orient`}
`!p
snip.rv = create_matrix(match.group(1), match.group(2), "&", "\t", "\\\\\\\\\n")
`$0
\end{array}
endsnippet


post_jump "create_matrix_placeholders(snip)"
snippet 'tab(\d+),(\d+)' "LaTeX tabular" br
\begin{tabular}{`!p
orient = ""
for _ in range(0, int(match.group(2))): orient += "|c"
snip.rv = orient + "|"`}
	\hline
`!p
snip.rv = create_matrix(match.group(2), match.group(1), "&", "\t", "\\\\\\\\\n")
`$0
	\hline
\end{tabular}
endsnippet
