#! /bin/bash
pgrep -x sxhkd > /dev/null || sxhkd &

bspc monitor -d 1 2 3 4 5 6 7 8 9 10

bspc config border_width         1
bspc config window_gap           0

bspc config split_ratio          0.50
bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config single_monocle       true
bspc config pointer_modifier     mod1

# color definitions
normal="#d8d8d8"
focused="#33cdfa"
background1="#c0e8f7"
background2="#c0e8f7"

# split style
bspc config automatic_scheme alternate

# border colors
bspc config active_border_color "$normal"
bspc config normal_border_color "$normal"
bspc config focused_border_color "$focused"

# mouse cursor configuration
bspc config pointer_follows_monitor true
bspc config pointer_follows_focus false
bspc config focus_follows_pointer true

# window rules
bspc rule -a 'Zathura' state=tiled
bspc rule -a 'discord' desktop='^4' follow=off

# standard floated applications
floatapps=(
    'Gimp'
    'Kanaconvert'
    'Inkscape'
    'Matplotlib'
    'mpv'
)

for appname in "${floatapps[@]}";do
    bspc rule -a "$appname" state=floating
done

# float applications to put on desktop 5
# (recommended for multi window applications)
floatappsMove=(
    'Gimp-2.10'
    'zoom'
    'retroarch'
    'Anki'
    'x2goclient'
    'easyeffects'
    'Picard'
    'Steam'
    'SimpleScreenRecorder'
)

for appname in "${floatappsMove[@]}";do
    bspc rule -a "$appname" state=floating follow=on center=true desktop='^5'
done

# run script to disable locking if application in full screen
pkill -f checkfullscreen.sh
$HOME/.local/bin/checkfullscreen.sh > /dev/null 2>&1 &

# set window 5 to only floating windows
pkill -f floating.sh
$HOME/.config/bspwm/floating.sh > /dev/null 2>&1 &

# run script for desktop renaming
pkill -f desktoprename.sh
$HOME/.config/bspwm/desktoprename.sh > /dev/null 2>&1 &

# polybar - suppress output
$HOME/.config/polybar/launch.sh > /dev/null 2>&1 &

# background programs
programs=(
    "clipmenud"
    "udiskie -t"
    "nm-applet"
    "blueman-applet"
    "dunst"
    "picom --config $HOME/.config/picom/picom.conf -b"
)

# (re)start background programs
for i in "${!programs[@]}"; do
    cmd="${programs[$i]}"
    program=${cmd%% *}
    args=$(echo "$cmd" | sed "s/^$program//")

    if command -v "$program" &> /dev/null; then
        pkill -f "$program"
        $program $args &
    fi
done

# set background
$HOME/.fehbg > /dev/null 2>&1 || hsetroot -add "$background1" -add "$background2" -gradient 30 &
